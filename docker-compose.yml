version: "3"
services:
#  Create a service named db.
  db:
#   Use the Docker Image postgres. This will pull the newest release.
    image: "postgres"
#   Give the container the name my_postgres. You can changes to something else.
    container_name: "postgres"
#   Setup the username, password, and database name. You can changes these values.
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=api
#   Maps port 54320 (localhost) to port 5432 on the container. You can change the ports to fix your needs.
    ports:
      - "5432:5432"
#   Set a volume some that database is not lost after shutting down the container.
#   I used the name postgres-data but you can changed it to something else.
    volumes:
      - ./pgdata:/var/lib/postgresql/data

  api:
    image: "dc2a/api2"
    volumes:
      - .:/usr/app/
      - /usr/app/node_modules
    ports:
      - "3001:3001"
    depends_on:
      - "db"
    environment:
      DATABASE_URL: postgres://postgres:password@db:5432/api
    command: bash -c 'while !</dev/tcp/db/5432; do sleep 10; done;  npm run migrate up; node index.js'

  frontend:
    image: "dc2a/frontend"
    volumes:
      - .:/usr/app/
      - /usr/app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      - "db"

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "taylor.c.graham@gmail.com"
      PGADMIN_DEFAULT_PASSWORD: "password"
    ports:
      - "3003:80"
    depends_on:
      - "db"
